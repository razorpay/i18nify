// Code generated by generateGoFromSchema.js. DO NOT EDIT.
package dialcodetocountry

import (
    "embed"
    "encoding/json"
)

// DialCodeToCountryDataDialCodeToCountry represents a map of dial codes to country codes
type DialCodeToCountryDataDialCodeToCountry struct {
    Items map[string][]string `json:"-"`
}

// UnmarshalJSON implements custom unmarshaling for DialCodeToCountryDataDialCodeToCountry
func (d *DialCodeToCountryDataDialCodeToCountry) UnmarshalJSON(data []byte) error {
    d.Items = make(map[string][]string)
    var raw map[string][]string
    if err := json.Unmarshal(data, &raw); err != nil {
        return err
    }
    d.Items = raw
    return nil
}

// MarshalJSON implements custom marshaling for DialCodeToCountryDataDialCodeToCountry
func (d *DialCodeToCountryDataDialCodeToCountry) MarshalJSON() ([]byte, error) {
    return json.Marshal(d.Items)
}

// GetItems returns the map of dial codes to country codes
func (d *DialCodeToCountryDataDialCodeToCountry) GetItems() map[string][]string {
    return d.Items
}

// GetCountriesByDialCode returns country codes for a specific dial code
func (d *DialCodeToCountryDataDialCodeToCountry) GetCountriesByDialCode(dialCode string) ([]string, bool) {
    countries, exists := d.Items[dialCode]
    return countries, exists
}

// DialCodeToCountryData represents the root structure
type DialCodeToCountryData struct {
    DialCodeToCountry DialCodeToCountryDataDialCodeToCountry `json:"dial_code_to_country"`
}

// GetDialCodeToCountry returns the dial_code_to_country map
func (d *DialCodeToCountryData) GetDialCodeToCountry() DialCodeToCountryDataDialCodeToCountry {
    return d.DialCodeToCountry
}

//go:embed "data/*.json"
var dialCodeToCountryFS embed.FS

// DialCodeToCountryDataInstance contains the generated data
var DialCodeToCountryDataInstance DialCodeToCountryData

func init() {
    data, err := dialCodeToCountryFS.ReadFile("data/data.json")
    if err != nil {
        panic(err)
    }
    if err := json.Unmarshal(data, &DialCodeToCountryDataInstance); err != nil {
        panic(err)
    }
}

// GetDialCodeToCountryData returns the instance of DialCodeToCountryData
func GetDialCodeToCountryData() *DialCodeToCountryData {
    return &DialCodeToCountryDataInstance
}