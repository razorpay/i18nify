// Code generated by generateGoFromSchema.js. DO NOT EDIT.
package countrycodetophonenumber

import (
    "embed"
    "encoding/json"
)

// CountryCodeToPhoneNumberDataCountryTeleInformationItem represents a single country's telephone information
type CountryCodeToPhoneNumberDataCountryTeleInformationItem struct {
    DialCode string `json:"dial_code"`
    Format string `json:"format"`
    Regex string `json:"regex"`
}

// GetDialCode returns the dial_code
func (d *CountryCodeToPhoneNumberDataCountryTeleInformationItem) GetDialCode() string {
    return d.DialCode
}

// GetFormat returns the format
func (d *CountryCodeToPhoneNumberDataCountryTeleInformationItem) GetFormat() string {
    return d.Format
}

// GetRegex returns the regex
func (d *CountryCodeToPhoneNumberDataCountryTeleInformationItem) GetRegex() string {
    return d.Regex
}

// CountryCodeToPhoneNumberDataCountryTeleInformation represents a map of country codes to telephone information
type CountryCodeToPhoneNumberDataCountryTeleInformation struct {
    Items map[string]CountryCodeToPhoneNumberDataCountryTeleInformationItem `json:"-"`
}

// UnmarshalJSON implements custom unmarshaling for CountryCodeToPhoneNumberDataCountryTeleInformation
func (d *CountryCodeToPhoneNumberDataCountryTeleInformation) UnmarshalJSON(data []byte) error {
    d.Items = make(map[string]CountryCodeToPhoneNumberDataCountryTeleInformationItem)
    var raw map[string]CountryCodeToPhoneNumberDataCountryTeleInformationItem
    if err := json.Unmarshal(data, &raw); err != nil {
        return err
    }
    d.Items = raw
    return nil
}

// MarshalJSON implements custom marshaling for CountryCodeToPhoneNumberDataCountryTeleInformation
func (d *CountryCodeToPhoneNumberDataCountryTeleInformation) MarshalJSON() ([]byte, error) {
    return json.Marshal(d.Items)
}

// GetItems returns the map of country codes to telephone information
func (d *CountryCodeToPhoneNumberDataCountryTeleInformation) GetItems() map[string]CountryCodeToPhoneNumberDataCountryTeleInformationItem {
    return d.Items
}

// GetTeleInformationByCountry returns telephone information for a specific country code
func (d *CountryCodeToPhoneNumberDataCountryTeleInformation) GetTeleInformationByCountry(countryCode string) (CountryCodeToPhoneNumberDataCountryTeleInformationItem, bool) {
    item, exists := d.Items[countryCode]
    return item, exists
}

// CountryCodeToPhoneNumberData represents the root structure
type CountryCodeToPhoneNumberData struct {
    CountryTeleInformation CountryCodeToPhoneNumberDataCountryTeleInformation `json:"country_tele_information"`
}

// GetCountryTeleInformation returns the country_tele_information map
func (d *CountryCodeToPhoneNumberData) GetCountryTeleInformation() CountryCodeToPhoneNumberDataCountryTeleInformation {
    return d.CountryTeleInformation
}

//go:embed "data/*.json"
var countryCodeToPhoneNumberFS embed.FS

// CountryCodeToPhoneNumberDataInstance contains the generated data
var CountryCodeToPhoneNumberDataInstance CountryCodeToPhoneNumberData

func init() {
    data, err := countryCodeToPhoneNumberFS.ReadFile("data/data.json")
    if (err != nil) {
        panic(err)
    }
    if err := json.Unmarshal(data, &CountryCodeToPhoneNumberDataInstance); err != nil {
        panic(err)
    }
}

// GetCountryCodeToPhoneNumberData returns the instance of CountryCodeToPhoneNumberData
func GetCountryCodeToPhoneNumberData() *CountryCodeToPhoneNumberData {
    return &CountryCodeToPhoneNumberDataInstance
}