{"version":3,"file":"index.js","sources":["../../../src/common/errorBoundary/index.ts","../../../src/modules/.internal/utils/getDefaultState.ts","../../../src/modules/.internal/state/index.ts","../../../src/modules/core/getState.ts","../../../src/modules/core/setState.ts","../../../src/modules/core/resetState.ts"],"sourcesContent":["// Custom Error class to extend properties to error object\nexport class I18nifyError extends Error {\n  timestamp: Date;\n  constructor(message: string | undefined) {\n    super(message);\n    this.name = 'i18nify Error';\n    this.timestamp = new Date();\n    // more params like type of error/severity can be added in future for better debugging.\n  }\n}\n\n/**\n * withErrorBoundary is a higher order function that takes function as parameter and wraps it in try/catch block.\n * It appends additional attributes and serves as a centralized error-handling service.\n * Usage =>\n * const wrappedUtilityFn = withErrorBoundary(utilityFn)\n *\n * @param fn utility that is wrapped in error boundary\n * @returns {Function} returns the function wrapped in try/catch block\n */\nexport const withErrorBoundary = <T extends (...args: any[]) => any>(\n  fn: T,\n): ((...args: Parameters<T>) => ReturnType<T>) => {\n  return function (this: unknown, ...rest: Parameters<T>): ReturnType<T> {\n    try {\n      return fn.call(this, ...rest) as ReturnType<T>;\n    } catch (err) {\n      console.warn('[I18N Error]: ', err);\n      // Currently, we are throwing the error as it is to consumers.\n      // In the future, this can be modified as per our requirement, like an error logging service.\n      throw new I18nifyError(err as string | undefined);\n    }\n  };\n};\n","import type { I18nState } from '../state/types';\n\nexport function getDefaultState(): I18nState {\n  return {\n    locale: '',\n    direction: '',\n    country: '',\n  };\n}\n","import { I18nState } from './types';\nimport { getDefaultState } from '../utils/getDefaultState';\n\nexport class I18nStateManager {\n  private static instance: I18nStateManager | undefined;\n  private state: I18nState;\n\n  private constructor() {\n    this.state = getDefaultState();\n  }\n\n  public static getInstance(): I18nStateManager {\n    if (!I18nStateManager.instance) {\n      I18nStateManager.instance = new I18nStateManager();\n    }\n\n    return I18nStateManager.instance;\n  }\n\n  public static resetInstance(): void {\n    I18nStateManager.instance = undefined;\n  }\n\n  public getState(): I18nState {\n    return { ...this.state };\n  }\n\n  public setState(newState: Partial<I18nState>): void {\n    this.state = { ...this.state, ...newState };\n  }\n\n  public resetState(): void {\n    this.state = getDefaultState();\n  }\n}\n\nexport default I18nStateManager.getInstance();\n","import { withErrorBoundary } from '../../common/errorBoundary';\nimport state from '../.internal/state';\nimport { I18nState } from '../.internal/state/types';\n\n/**\n * function to return active i18n state\n *\n *  ===== USAGE =====\n * import { getState } from '@razorpay/i18nify';\n *\n * console.log(getState())\n *\n * @returns i18n state\n */\nconst getState = (): I18nState => {\n  return state.getState();\n};\n\nexport default withErrorBoundary<typeof getState>(getState);\n","import { withErrorBoundary } from '../../common/errorBoundary';\nimport state from '../.internal/state';\nimport { I18nState } from '../.internal/state/types';\n\n/**\n * Function to set and override the active state in i18nify SDK\n *\n * ===== USAGE =====\n * import { setState } from \"@razorpay/i18nify\";\n * setState({locale: 'en-US'})\n *\n * @param newState data to set in i18nState instance\n */\nconst setState = (newState: Partial<I18nState>): void => {\n  state.setState(newState);\n};\n\nexport default withErrorBoundary<typeof setState>(setState);\n","import { withErrorBoundary } from '../../common/errorBoundary';\nimport state from '../.internal/state';\n\n/**\n * Function to reset the active state in i18nify SDK\n *\n * ===== USAGE =====\n * import { resetState } from \"@razorpay/i18nify\";\n * resetState()\n *\n * @param newState data to set in i18nState instance\n */\nconst resetState = (): void => {\n  state.resetState();\n};\n\nexport default withErrorBoundary<typeof resetState>(resetState);\n"],"names":[],"mappings":"AAAA;AACM,MAAO,YAAa,SAAQ,KAAK,CAAA;AAErC,IAAA,WAAA,CAAY,OAA2B,EAAA;QACrC,KAAK,CAAC,OAAO,CAAC,CAAC;AACf,QAAA,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;AAC5B,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;;KAE7B;AACF,CAAA;AAED;;;;;;;;AAQG;AACI,MAAM,iBAAiB,GAAG,CAC/B,EAAK,KAC0C;IAC/C,OAAO,UAAyB,GAAG,IAAmB,EAAA;QACpD,IAAI;YACF,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAkB,CAAC;AAChD,SAAA;AAAC,QAAA,OAAO,GAAG,EAAE;AACZ,YAAA,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;;;AAGpC,YAAA,MAAM,IAAI,YAAY,CAAC,GAAyB,CAAC,CAAC;AACnD,SAAA;AACH,KAAC,CAAC;AACJ,CAAC;;SC/Be,eAAe,GAAA;IAC7B,OAAO;AACL,QAAA,MAAM,EAAE,EAAE;AACV,QAAA,SAAS,EAAE,EAAE;AACb,QAAA,OAAO,EAAE,EAAE;KACZ,CAAC;AACJ;;MCLa,gBAAgB,CAAA;AAI3B,IAAA,WAAA,GAAA;AACE,QAAA,IAAI,CAAC,KAAK,GAAG,eAAe,EAAE,CAAC;KAChC;AAEM,IAAA,OAAO,WAAW,GAAA;AACvB,QAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;AAC9B,YAAA,gBAAgB,CAAC,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;AACpD,SAAA;QAED,OAAO,gBAAgB,CAAC,QAAQ,CAAC;KAClC;AAEM,IAAA,OAAO,aAAa,GAAA;AACzB,QAAA,gBAAgB,CAAC,QAAQ,GAAG,SAAS,CAAC;KACvC;IAEM,QAAQ,GAAA;QACb,OAAY,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,KAAK,CAAG,CAAA;KAC1B;AAEM,IAAA,QAAQ,CAAC,QAA4B,EAAA;QAC1C,IAAI,CAAC,KAAK,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,KAAK,CAAA,EAAK,QAAQ,CAAE,CAAC;KAC7C;IAEM,UAAU,GAAA;AACf,QAAA,IAAI,CAAC,KAAK,GAAG,eAAe,EAAE,CAAC;KAChC;AACF,CAAA;AAED,YAAe,gBAAgB,CAAC,WAAW,EAAE;;AChC7C;;;;;;;;;AASG;AACH,MAAM,QAAQ,GAAG,MAAgB;AAC/B,IAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;AAC1B,CAAC,CAAC;AAEF,iBAAe,iBAAiB,CAAkB,QAAQ,CAAC;;ACd3D;;;;;;;;AAQG;AACH,MAAM,QAAQ,GAAG,CAAC,QAA4B,KAAU;AACtD,IAAA,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC3B,CAAC,CAAC;AAEF,iBAAe,iBAAiB,CAAkB,QAAQ,CAAC;;ACd3D;;;;;;;;AAQG;AACH,MAAM,UAAU,GAAG,MAAW;IAC5B,KAAK,CAAC,UAAU,EAAE,CAAC;AACrB,CAAC,CAAC;AAEF,mBAAe,iBAAiB,CAAoB,UAAU,CAAC;;;;"}