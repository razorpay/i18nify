{"version":3,"file":"index.js","sources":["../../../src/common/errorBoundary/index.ts","../../../src/modules/.internal/utils/getDefaultState.ts","../../../src/modules/.internal/state/index.ts","../../../src/modules/.internal/utils/getLocale.ts","../../../src/modules/.internal/utils/getIntlInstanceWithOptions.ts","../../../src/modules/currency/formatNumber.ts","../../../src/modules/currency/data/currencies.ts","../../../src/modules/currency/getCurrencyList.ts","../../../src/modules/currency/getCurrencySymbol.ts","../../../src/modules/currency/formatNumberByParts.ts"],"sourcesContent":["// Custom Error class to extend properties to error object\nexport class I18nifyError extends Error {\n  timestamp: Date;\n  constructor(message: string | undefined) {\n    super(message);\n    this.name = 'i18nify Error';\n    this.timestamp = new Date();\n    // more params like type of error/severity can be added in future for better debugging.\n  }\n}\n\n/**\n * withErrorBoundary is a higher order function that takes function as parameter and wraps it in try/catch block.\n * It appends additional attributes and serves as a centralized error-handling service.\n * Usage =>\n * const wrappedUtilityFn = withErrorBoundary(utilityFn)\n *\n * @param fn utility that is wrapped in error boundary\n * @returns {Function} returns the function wrapped in try/catch block\n */\nexport const withErrorBoundary = <T extends (...args: any[]) => any>(\n  fn: T,\n): ((...args: Parameters<T>) => ReturnType<T>) => {\n  return function (this: unknown, ...rest: Parameters<T>): ReturnType<T> {\n    try {\n      return fn.call(this, ...rest) as ReturnType<T>;\n    } catch (err) {\n      console.warn('[I18N Error]: ', err);\n      // Currently, we are throwing the error as it is to consumers.\n      // In the future, this can be modified as per our requirement, like an error logging service.\n      throw new I18nifyError(err as string | undefined);\n    }\n  };\n};\n","import type { I18nState } from '../state/types';\n\nexport function getDefaultState(): I18nState {\n  return {\n    locale: '',\n    direction: '',\n    country: '',\n  };\n}\n","import { I18nState } from './types';\nimport { getDefaultState } from '../utils/getDefaultState';\n\nexport class I18nStateManager {\n  private static instance: I18nStateManager | undefined;\n  private state: I18nState;\n\n  private constructor() {\n    this.state = getDefaultState();\n  }\n\n  public static getInstance(): I18nStateManager {\n    if (!I18nStateManager.instance) {\n      I18nStateManager.instance = new I18nStateManager();\n    }\n\n    return I18nStateManager.instance;\n  }\n\n  public static resetInstance(): void {\n    I18nStateManager.instance = undefined;\n  }\n\n  public getState(): I18nState {\n    return { ...this.state };\n  }\n\n  public setState(newState: Partial<I18nState>): void {\n    this.state = { ...this.state, ...newState };\n  }\n\n  public resetState(): void {\n    this.state = getDefaultState();\n  }\n}\n\nexport default I18nStateManager.getInstance();\n","export const getLocale = (): string => {\n  // Check if running in a non-browser environment (e.g., Node.js or older browsers).\n  if (typeof navigator === 'undefined') {\n    return 'en-IN';\n  }\n\n  // Check if the browser supports the Intl object and user language preferences.\n  if (\n    window.Intl &&\n    typeof window.Intl === 'object' &&\n    (window.navigator.languages || window.navigator.language)\n  ) {\n    const userLocales = window.navigator.languages || [\n      window.navigator.language,\n    ];\n    return userLocales[0];\n  }\n\n  // Fallback to a supported locale or the default locale.\n  return 'en-IN';\n};\n","import { CURRENCIES } from '../../currency/data/currencies';\nimport state from '../state';\nimport { getLocale } from './getLocale';\n\nexport const getIntlInstanceWithOptions = (\n  options: {\n    currency?: keyof typeof CURRENCIES;\n    locale?: string;\n    intlOptions?: Intl.NumberFormatOptions;\n  } = {},\n) => {\n  /** retrieve locale from below areas in order of preference\n   * 1. options.locale (used in case if someone wants to override locale just for a specific area and not globally)\n   * 2. i18nState.locale (uses locale set globally)\n   * 3. navigator (in case locale is not passed or set, use it from browser's navigator)\n   * */\n  let locale = options?.locale || state.getState().locale;\n\n  // If a specific locale is provided, use it; otherwise, use the browser's locale\n  if (!locale) {\n    locale = getLocale();\n  }\n\n  const intlOptions = options?.intlOptions ? { ...options.intlOptions } : {};\n\n  if (options?.currency || intlOptions.currency) {\n    intlOptions.style = 'currency';\n    intlOptions.currency = (options.currency || intlOptions.currency) as string;\n  }\n\n  if (!locale) throw new Error('Pass valid locale !');\n\n  return new Intl.NumberFormat(locale || undefined, intlOptions);\n};\n","import { CURRENCIES } from './data/currencies';\nimport { withErrorBoundary } from '../../common/errorBoundary';\nimport { getIntlInstanceWithOptions } from '../.internal/utils';\n\n// this function formats number based on different arguments passed\nconst formatNumber = (\n  amount: string | number,\n  options: {\n    currency?: keyof typeof CURRENCIES;\n    locale?: string;\n    intlOptions?: Intl.NumberFormatOptions;\n  } = {},\n): string => {\n  if (!Number(amount) && Number(amount) !== 0)\n    throw new Error('Parameter `amount` is not a number!');\n\n  let formattedAmount = '';\n\n  try {\n    formattedAmount = getIntlInstanceWithOptions(options).format(\n      Number(amount),\n    );\n  } catch (err) {\n    if (err instanceof Error) {\n      throw new Error(err.message);\n    } else {\n      throw new Error(`An unknown error occurred = ${err}`);\n    }\n  }\n\n  return formattedAmount;\n};\n\nexport default withErrorBoundary<typeof formatNumber>(formatNumber);\n","export const CURRENCIES: { [key: string]: { symbol: string; name: string } } = {\n  AED: { symbol: 'د.إ', name: 'United Arab Emirates Dirham' },\n  ALL: { symbol: 'Lek', name: 'Albanian Lek' },\n  AMD: { symbol: '֏', name: 'Armenian Dram' },\n  ARS: { symbol: 'ARS', name: 'Argentine Peso' },\n  AUD: { symbol: 'A$', name: 'Australian Dollar' },\n  AWG: { symbol: 'Afl.', name: 'Aruban Florin' },\n  BBD: { symbol: '$', name: 'Barbadian Dollar' },\n  BDT: { symbol: '৳', name: 'Bangladeshi Taka' },\n  BMD: { symbol: '$', name: 'Bermudian Dollar' },\n  BND: { symbol: 'BND', name: 'Brunei Dollar' },\n  BOB: { symbol: 'Bs', name: 'Bolivian Boliviano' },\n  BSD: { symbol: 'B$', name: 'Bahamian Dollar' },\n  BWP: { symbol: 'P', name: 'Botswanan Pula' },\n  BZD: { symbol: 'BZ$', name: 'Belize Dollar' },\n  CAD: { symbol: 'C$', name: 'Canadian Dollar' },\n  CHF: { symbol: 'CHf', name: 'Swiss Franc' },\n  CNY: { symbol: '¥', name: 'Chinese Yuan' },\n  COP: { symbol: 'COL$', name: 'Colombian Peso' },\n  CRC: { symbol: '₡', name: 'Costa Rican Colón' },\n  CUP: { symbol: '$MN', name: 'Cuban Peso' },\n  CZK: { symbol: 'Kč', name: 'Czech Koruna' },\n  DKK: { symbol: 'DKK', name: 'Danish Krone' },\n  DOP: { symbol: 'RD$', name: 'Dominican Peso' },\n  DZD: { symbol: 'د.ج', name: 'Algerian Dinar' },\n  EGP: { symbol: 'E£', name: 'Egyptian Pound' },\n  ETB: { symbol: 'ብር', name: 'Ethiopian Birr' },\n  EUR: { symbol: '€', name: 'Euro' },\n  FJD: { symbol: 'FJ$', name: 'Fijian Dollar' },\n  GBP: { symbol: '£', name: 'British Pound' },\n  GHS: { symbol: 'GH₵', name: 'Ghanaian Cedi' },\n  GIP: { symbol: 'GIP', name: 'Gibraltar Pound' },\n  GMD: { symbol: 'D', name: 'Gambian Dalasi' },\n  GTQ: { symbol: 'Q', name: 'Guatemalan Quetzal' },\n  GYD: { symbol: 'G$', name: 'Guyanese Dollar' },\n  HKD: { symbol: 'HK$', name: 'Hong Kong Dollar' },\n  HNL: { symbol: 'HNL', name: 'Honduran Lempira' },\n  HRK: { symbol: 'kn', name: 'Croatian Kuna' },\n  HTG: { symbol: 'G', name: 'Haitian Gourde' },\n  HUF: { symbol: 'Ft', name: 'Hungarian Forint' },\n  IDR: { symbol: 'Rp', name: 'Indonesian Rupiah' },\n  ILS: { symbol: '₪', name: 'Israeli New Shekel' },\n  INR: { symbol: '₹', name: 'Indian Rupee' },\n  JMD: { symbol: 'J$', name: 'Jamaican Dollar' },\n  KES: { symbol: 'Ksh', name: 'Kenyan Shilling' },\n  KGS: { symbol: 'Лв', name: 'Kyrgystani Som' },\n  KHR: { symbol: '៛', name: 'Cambodian Riel' },\n  KYD: { symbol: 'CI$', name: 'Cayman Islands Dollar' },\n  KZT: { symbol: '₸', name: 'Kazakhstani Tenge' },\n  LAK: { symbol: '₭', name: 'Laotian Kip' },\n  LKR: { symbol: 'රු', name: 'Sri Lankan Rupee' },\n  LRD: { symbol: 'L$', name: 'Liberian Dollar' },\n  LSL: { symbol: 'LSL', name: 'Lesotho Loti' },\n  MAD: { symbol: 'د.م.', name: 'Moroccan Dirham' },\n  MDL: { symbol: 'MDL', name: 'Moldovan Leu' },\n  MKD: { symbol: 'ден', name: 'Macedonian Denar' },\n  MMK: { symbol: 'MMK', name: 'Myanmar Kyat' },\n  MNT: { symbol: '₮', name: 'Mongolian Tugrik' },\n  MOP: { symbol: 'MOP$', name: 'Macanese Pataca' },\n  MUR: { symbol: '₨', name: 'Mauritian Rupee' },\n  MVR: { symbol: 'Rf', name: 'Maldivian Rufiyaa' },\n  MWK: { symbol: 'MK', name: 'Malawian Kwacha' },\n  MXN: { symbol: 'Mex$', name: 'Mexican Peso' },\n  MYR: { symbol: 'RM', name: 'Malaysian Ringgit' },\n  NAD: { symbol: 'N$', name: 'Namibian Dollar' },\n  NGN: { symbol: '₦', name: 'Nigerian Naira' },\n  NIO: { symbol: 'NIO', name: 'Nicaraguan Córdoba' },\n  NOK: { symbol: 'NOK', name: 'Norwegian Krone' },\n  NPR: { symbol: 'रू', name: 'Nepalese Rupee' },\n  NZD: { symbol: 'NZ$', name: 'New Zealand Dollar' },\n  PEN: { symbol: 'S/', name: 'Peruvian Nuevo Sol' },\n  PGK: { symbol: 'PGK', name: 'Papua New Guinean Kina' },\n  PHP: { symbol: '₱', name: 'Philippine Peso' },\n  PKR: { symbol: '₨', name: 'Pakistani Rupee' },\n  QAR: { symbol: 'QR', name: 'Qatari Riyal' },\n  RUB: { symbol: '₽', name: 'Russian Ruble' },\n  SAR: { symbol: 'SR', name: 'Saudi Riyal' },\n  SCR: { symbol: 'SRe', name: 'Seychellois Rupee' },\n  SEK: { symbol: 'SEK', name: 'Swedish Krona' },\n  SGD: { symbol: 'S$', name: 'Singapore Dollar' },\n  SLL: { symbol: 'Le', name: 'Sierra Leonean Leone' },\n  SOS: { symbol: 'Sh.so.', name: 'Somali Shilling' },\n  SSP: { symbol: 'SS£', name: 'South Sudanese Pound' },\n  SVC: { symbol: '₡', name: 'Salvadoran Colón' },\n  SZL: { symbol: 'E', name: 'Swazi Lilangeni' },\n  THB: { symbol: '฿', name: 'Thai Baht' },\n  TTD: { symbol: 'TT$', name: 'Trinidad and Tobago Dollar' },\n  TZS: { symbol: 'Sh', name: 'Tanzanian Shilling' },\n  USD: { symbol: '$', name: 'United States Dollar' },\n  UYU: { symbol: '$U', name: 'Uruguayan Peso' },\n  UZS: { symbol: \"so'm\", name: 'Uzbekistani Som' },\n  YER: { symbol: '﷼', name: 'Yemeni Rial' },\n  ZAR: { symbol: 'R', name: 'South African Rand' },\n  KWD: { symbol: 'د.ك', name: 'Kuwaiti Dinar' },\n  BHD: { symbol: 'د.ب.', name: 'Bahraini Dinar' },\n  OMR: { symbol: 'ر.ع.', name: 'Omani Rial' },\n};\n","import { CURRENCIES } from './data/currencies';\nimport { withErrorBoundary } from '../../common/errorBoundary';\n\nconst getCurrencyList = () => {\n  return CURRENCIES;\n};\n\nexport default withErrorBoundary<typeof getCurrencyList>(getCurrencyList);\n","import { CURRENCIES } from './data/currencies';\nimport { withErrorBoundary } from '../../common/errorBoundary';\n\nconst getCurrencySymbol = (currencyCode: keyof typeof CURRENCIES): string => {\n  if (currencyCode in CURRENCIES) return CURRENCIES[currencyCode]?.symbol;\n  else throw new Error('Invalid currencyCode!');\n};\n\nexport default withErrorBoundary<typeof getCurrencySymbol>(getCurrencySymbol);\n","import { CURRENCIES } from './data/currencies';\nimport { ByParts } from './types';\nimport { withErrorBoundary } from '../../common/errorBoundary';\nimport { getIntlInstanceWithOptions } from '../.internal/utils';\n\nconst formatNumberByParts = (\n  amount: string | number,\n  options: {\n    currency?: keyof typeof CURRENCIES;\n    locale?: string;\n    intlOptions?: Intl.NumberFormatOptions;\n  } = {},\n): ByParts => {\n  if (!Number(amount) && Number(amount) !== 0)\n    throw new Error('Parameter `amount` is not a number!');\n\n  try {\n    const formattedAmount = getIntlInstanceWithOptions(options).formatToParts(\n      Number(amount),\n    );\n\n    const parts = formattedAmount;\n    let integerValue = '';\n    let decimalValue = '';\n    let currencySymbol = '';\n    let separator = '';\n    let symbolAtFirst = true;\n    const partValues = parts.map((p) => {\n      if (p.type === 'integer' || p.type === 'group') integerValue += p.value;\n      else if (p.type === 'fraction') decimalValue += p.value;\n      else if (p.type === 'currency') currencySymbol += p.value;\n      else if (p.type === 'decimal') separator += p.value;\n      return p.value;\n    });\n\n    if (currencySymbol.toString() !== partValues[0].toString())\n      symbolAtFirst = false;\n\n    return {\n      currencySymbol,\n      decimalValue,\n      integerValue,\n      separator,\n      symbolAtFirst,\n    };\n  } catch (err) {\n    if (err instanceof Error) {\n      throw new Error(err.message);\n    } else {\n      throw new Error(`An unknown error occurred = ${err}`);\n    }\n  }\n};\n\nexport default withErrorBoundary<typeof formatNumberByParts>(\n  formatNumberByParts,\n);\n"],"names":[],"mappings":"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"}