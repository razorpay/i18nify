!function(x,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((x="undefined"!=typeof globalThis?globalThis:x||self).i18nify={})}(this,(function(x){"use strict";class e extends Error{constructor(x){super(x),this.name="i18nify Error",this.timestamp=new Date}}const n=x=>function(...n){try{return x.call(this,...n)}catch(x){throw console.warn("[I18N Error]: ",x),new e(x)}};class a{constructor(){this.state={locale:"",direction:"",country:""}}static getInstance(){return a.instance||(a.instance=new a),a.instance}static resetInstance(){a.instance=void 0}getState(){return Object.assign({},this.state)}setState(x){this.state=Object.assign(Object.assign({},this.state),x)}resetState(){this.state={locale:"",direction:"",country:""}}}var t=a.getInstance();var r=n((()=>t.getState()));var o=n((x=>{t.setState(x)}));var d=n((()=>{t.resetState()}));const s=()=>{if("undefined"==typeof navigator)return"en-IN";if(window.Intl&&"object"==typeof window.Intl&&(window.navigator.languages||window.navigator.language)){return(window.navigator.languages||[window.navigator.language])[0]}return"en-IN"},i=(x={})=>{let e=(null==x?void 0:x.locale)||t.getState().locale;e||(e=s());const n=(null==x?void 0:x.intlOptions)?Object.assign({},x.intlOptions):{};if(((null==x?void 0:x.currency)||n.currency)&&(n.style="currency",n.currency=x.currency||n.currency),!e)throw new Error("Pass valid locale !");return new Intl.NumberFormat(e||void 0,n)};var m=n(((x,e={})=>{if(!Number(x)&&0!==Number(x))throw new Error("Parameter `amount` is not a number!");let n="";try{n=i(e).format(Number(x))}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}return n}));const l={AED:{symbol:"د.إ",name:"United Arab Emirates Dirham"},ALL:{symbol:"Lek",name:"Albanian Lek"},AMD:{symbol:"֏",name:"Armenian Dram"},ARS:{symbol:"ARS",name:"Argentine Peso"},AUD:{symbol:"A$",name:"Australian Dollar"},AWG:{symbol:"Afl.",name:"Aruban Florin"},BBD:{symbol:"$",name:"Barbadian Dollar"},BDT:{symbol:"৳",name:"Bangladeshi Taka"},BMD:{symbol:"$",name:"Bermudian Dollar"},BND:{symbol:"BND",name:"Brunei Dollar"},BOB:{symbol:"Bs",name:"Bolivian Boliviano"},BSD:{symbol:"B$",name:"Bahamian Dollar"},BWP:{symbol:"P",name:"Botswanan Pula"},BZD:{symbol:"BZ$",name:"Belize Dollar"},CAD:{symbol:"C$",name:"Canadian Dollar"},CHF:{symbol:"CHf",name:"Swiss Franc"},CNY:{symbol:"¥",name:"Chinese Yuan"},COP:{symbol:"COL$",name:"Colombian Peso"},CRC:{symbol:"₡",name:"Costa Rican Colón"},CUP:{symbol:"$MN",name:"Cuban Peso"},CZK:{symbol:"Kč",name:"Czech Koruna"},DKK:{symbol:"DKK",name:"Danish Krone"},DOP:{symbol:"RD$",name:"Dominican Peso"},DZD:{symbol:"د.ج",name:"Algerian Dinar"},EGP:{symbol:"E£",name:"Egyptian Pound"},ETB:{symbol:"ብር",name:"Ethiopian Birr"},EUR:{symbol:"€",name:"Euro"},FJD:{symbol:"FJ$",name:"Fijian Dollar"},GBP:{symbol:"£",name:"British Pound"},GHS:{symbol:"GH₵",name:"Ghanaian Cedi"},GIP:{symbol:"GIP",name:"Gibraltar Pound"},GMD:{symbol:"D",name:"Gambian Dalasi"},GTQ:{symbol:"Q",name:"Guatemalan Quetzal"},GYD:{symbol:"G$",name:"Guyanese Dollar"},HKD:{symbol:"HK$",name:"Hong Kong Dollar"},HNL:{symbol:"HNL",name:"Honduran Lempira"},HRK:{symbol:"kn",name:"Croatian Kuna"},HTG:{symbol:"G",name:"Haitian Gourde"},HUF:{symbol:"Ft",name:"Hungarian Forint"},IDR:{symbol:"Rp",name:"Indonesian Rupiah"},ILS:{symbol:"₪",name:"Israeli New Shekel"},INR:{symbol:"₹",name:"Indian Rupee"},JMD:{symbol:"J$",name:"Jamaican Dollar"},KES:{symbol:"Ksh",name:"Kenyan Shilling"},KGS:{symbol:"Лв",name:"Kyrgystani Som"},KHR:{symbol:"៛",name:"Cambodian Riel"},KYD:{symbol:"CI$",name:"Cayman Islands Dollar"},KZT:{symbol:"₸",name:"Kazakhstani Tenge"},LAK:{symbol:"₭",name:"Laotian Kip"},LKR:{symbol:"රු",name:"Sri Lankan Rupee"},LRD:{symbol:"L$",name:"Liberian Dollar"},LSL:{symbol:"LSL",name:"Lesotho Loti"},MAD:{symbol:"د.م.",name:"Moroccan Dirham"},MDL:{symbol:"MDL",name:"Moldovan Leu"},MKD:{symbol:"ден",name:"Macedonian Denar"},MMK:{symbol:"MMK",name:"Myanmar Kyat"},MNT:{symbol:"₮",name:"Mongolian Tugrik"},MOP:{symbol:"MOP$",name:"Macanese Pataca"},MUR:{symbol:"₨",name:"Mauritian Rupee"},MVR:{symbol:"Rf",name:"Maldivian Rufiyaa"},MWK:{symbol:"MK",name:"Malawian Kwacha"},MXN:{symbol:"Mex$",name:"Mexican Peso"},MYR:{symbol:"RM",name:"Malaysian Ringgit"},NAD:{symbol:"N$",name:"Namibian Dollar"},NGN:{symbol:"₦",name:"Nigerian Naira"},NIO:{symbol:"NIO",name:"Nicaraguan Córdoba"},NOK:{symbol:"NOK",name:"Norwegian Krone"},NPR:{symbol:"रू",name:"Nepalese Rupee"},NZD:{symbol:"NZ$",name:"New Zealand Dollar"},PEN:{symbol:"S/",name:"Peruvian Nuevo Sol"},PGK:{symbol:"PGK",name:"Papua New Guinean Kina"},PHP:{symbol:"₱",name:"Philippine Peso"},PKR:{symbol:"₨",name:"Pakistani Rupee"},QAR:{symbol:"QR",name:"Qatari Riyal"},RUB:{symbol:"₽",name:"Russian Ruble"},SAR:{symbol:"SR",name:"Saudi Riyal"},SCR:{symbol:"SRe",name:"Seychellois Rupee"},SEK:{symbol:"SEK",name:"Swedish Krona"},SGD:{symbol:"S$",name:"Singapore Dollar"},SLL:{symbol:"Le",name:"Sierra Leonean Leone"},SOS:{symbol:"Sh.so.",name:"Somali Shilling"},SSP:{symbol:"SS£",name:"South Sudanese Pound"},SVC:{symbol:"₡",name:"Salvadoran Colón"},SZL:{symbol:"E",name:"Swazi Lilangeni"},THB:{symbol:"฿",name:"Thai Baht"},TTD:{symbol:"TT$",name:"Trinidad and Tobago Dollar"},TZS:{symbol:"Sh",name:"Tanzanian Shilling"},USD:{symbol:"$",name:"United States Dollar"},UYU:{symbol:"$U",name:"Uruguayan Peso"},UZS:{symbol:"so'm",name:"Uzbekistani Som"},YER:{symbol:"﷼",name:"Yemeni Rial"},ZAR:{symbol:"R",name:"South African Rand"},KWD:{symbol:"د.ك",name:"Kuwaiti Dinar"},BHD:{symbol:"د.ب.",name:"Bahraini Dinar"},OMR:{symbol:"ر.ع.",name:"Omani Rial"}};var c=n((()=>l));var y=n((x=>{var e;if(x in l)return null===(e=l[x])||void 0===e?void 0:e.symbol;throw new Error("Invalid currencyCode!")}));const u=["nan","infinity","percent","integer","group","decimal","fraction","plusSign","minusSign","percentSign","currency","code","symbol","name","compact","exponentInteger","exponentMinusSign","exponentSeparator","unit"];var $=n(((x,e={})=>{if(!Number(x)&&0!==Number(x))throw new Error("Parameter `amount` is not a number!");try{const n=i(e).formatToParts(Number(x)),a={};return n.forEach((x=>{"group"===x.type?a.integer=(a.integer||"")+x.value:-1!=u.findIndex((e=>e===x.type))&&(a[x.type]=(a[x.type]||"")+x.value)})),Object.assign(Object.assign({},a),{isPrefixSymbol:"currency"===n[0].type,rawParts:n})}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}}));const b={IN:/^(?:(?:\+|0{0,2})91\s*[-]?\s*|[0]?)?[6789]\d{9}$/,MY:/^(\+?6?0)?(\d{1,3})[-. ]?(\d{7,8})$/,AE:/^(?:\+?971|0)?(?:2|3|4|6|7|9)\d{8}$/,AL:/^(?:\+?355)?(?:[4-9]\d{7}|6\d{8})$/,AM:/^(?:\+?374)?(?:[0-9]{8}|[0-9]{6}[0-9]{2})$/,AR:/^(?:(?:\+|0{0,2})54)?(?:11|[2368]\d)(?:(?=\d{0,2}15)\d{2})??\d{8}$/,AU:/^(?:\+?61|0)4\d{8}$/,AW:/^(?:(?:\+297)?(?!0)\d{7})$/,BB:/^(?:(?:\+1)?246)?(?:\d{3})?\d{7}$/,BD:/^(?:\+?880|0)1[13456789]\d{8}$/,BM:/^(?:(?:\+1)?441)?(?:\d{2})?\d{7}$/,BN:/^(?:\+?673)?(?:\d{3})?\d{4}$/,BO:/^(?:(?:\+|0{0,2})591)?(?:(?:2|3|7|6)\d{7})$/,BS:/^(?:(?:\+1)?242)?(?:\d{3})?\d{7}$/,BW:/^(?:(?:\+267)?\s?)?[74]\d{7}$/,BZ:/^(?:(?:\+501)?\s?)?[622]\d{4}$/,CH:/^(?:(?:\+41|0)(?:\s*\(?0\)?\s*))?(?:\d{2}\s*)?\d{3}\s*\d{2}\s*\d{2}$/,CN:/^(?:(?:\+|00)86)?1\d{10}$/,CO:/^(?:(?:\+57|0057)?)?[1-8]{1}\d{6,7}$/,OM:/^(?:\+?968)?(?:95|96|97|98)\d{6}$/,CR:/^(?:(?:\+506)?\s*|0)?[1-9]\d{7}$/,CU:/^(?:\+?53)?(?:[5-8]\d{7})$/,CZ:/^(?:\+?420)?(?:\d{9})$/,DK:/^(?:\+?45)?(?:\d{8})$/,DO:/^(?:(?:\+1)?809|1-8(?:00|88|89))(?:\d{7})$/,DZ:/^(?:\+?213|0)([567]\d{8})$/,EG:/^(?:(?:\+20|20)?(\d{10}))$/,ET:/^(?:\+?251)?[1-59]\d{8}$/,EU:/^(?:(?:\+?3)?8)?\s*(?:\d{3}\s*){3}\d{2}$/,FJ:/^(?:(?:\+?679)?\s?\d{3}\s?\d{4})?$/,GB:/^(?:(?:\+44\s?|0)7\d{3}(\s?\d{4,})?)$/,GH:/^(?:(?:\+233)|0)?(?:\d{9})$/,GI:/^(?:\+350)?\d{5}$/,GM:/^(?:\+220)?\d{5,7}$/,GT:/^(?:\+502)?[2468]\d{7,8}$/,GY:/^(?:(?:\+592)?(?:(?:\s)?[2-9])(?:(?:\s)?\d))?(?:(?:\s)?\d{4})$/,HK:/^(?:\+852\s?)?[456789]\d{3}\s?\d{4}$/,HN:/^(?:\+504)?[89]\d{7}$/,HR:/^(?:\+?385)?\d{8,9}$/,HT:/^(?:\+?509)?\d{8}$/,HU:/^(?:(?:\+36))(\s?\d{2}\s?\d{3}\s?\d{4})$/,ID:/^(?:\+?62|0[1-9])[\s-]?\d{2,4}[\s-]?\d{3,4}[\s-]?\d{3,4}$/,IL:/^(?:(?:\+972|0)(?:-)?)[23489]\d{7}$/,JM:/^(?:(?:\+1876))\d{7,10}$/,KE:/^(?:(?:\+254)|(?:0))(?:\d{6,7})$/,KG:/^(?:\+996)?\s?\d{9}$/,KH:/^(?:(?:\+855)|(?:0))(?:\s?[1-9]\d{7,8})$/,KY:/^(?:\+?1\s?(345))\d{6}$/,KZ:/^(?:\+?7|8)?7\d{9}$/,LA:/^(?:(?:\+?856)|0)(20\d{7,9})$/,LK:/^(?:(?:\+94)|0)(?:\d{9})$/,LR:/^(?:\+231)[ -\d]{4}[ -\d]{4}$/,LS:/^(?:(?:\+?266)|0)?[56]\d{7}$/,MA:/^(?:(?:\+?212(\s*[-|\s*]?\d{1,9})?)|(?:0))(?:\d{9})$/,MD:/^(?:(?:\+373)|(?:0))(?:\d{7,8})$/,MK:/^(?:\+389|0)(?:(?:2[0-4]|[3-9])\s?)?\d{6}$/,MM:/^(?:(?:\+?95)|0)?[1-9]\d{9}$/,MN:/^(?:\+976|0)\d{8}$/,MO:/^(?:(?:\+?853)|[0-9])?\d{8}$/,MU:/^(?:\+230|0)?\d{8}$/,MV:/^(?:(?:\+?960)|0)?\d{7}$/,MW:/^(?:\+265)[1-9]\d{6}$/,MX:/^(?:(?:\+?52)?\s?(?:1|01)?\s?)?(?:\d{3}\s?\d{3}\s?\d{4})$/,NA:/^(?:(?:\+264)|0)?\d{8}$/,NG:/^(?:(?:\+234)|(?:0))(?:\d{7,8})$/,NI:/^(?:(?:\+505))?(?:\d{8})$/,NO:/^(?:(?:\+?47)|\d{2}|\d{3})\s?\d{2}\s?\d{3}$/,NP:/^(?:(?:\+977))?(\d{9,10})$/,NZ:/^(?:\+?64|0)(\d{2,5} \d{4,8}|\d{3,4} \d{4})$/,PE:/^(?:(?:\+51)|0)?(?:9\d{8})$/,PG:/^(?:\+?675)?(?:[7-9]\d{7})$/,PH:/^(?:(?:\+?63)|0)(?:\d{10})$/,PK:/^(?:(?:\+92)|0)?[345]\d{9}$/,QA:/^(?:\+?974)?-?33\d{5}$/,RU:/^(?:\+?7|8)?[ -]?\(?9\d{2}\)?[ -]?\d{3}[ -]?\d{2}[ -]?\d{2}$/,SA:/^(?:\+?966)?\s?1?[\s-]?(?:[45]\d{2}|5\d{3})[\s-]?\d{4}$/,SC:/^(?:(?:\+248)|\d{4})\d{5}$/,SE:/^(?:\+?46|0)\s?[1-57-9](?:[0-9]\s?){8}$/,SG:/^(?:(?:\+65)|(?:\(\+65\))|(?:65))\d{4}\d{4}$/,SL:/^(?:(?:\+232)|(?:0))?\d{9}$/,SO:/^(?:\+252|0)?[567]\d{7}$/,SS:/^(?:\+211|0)?[1-9]\d{7,9}$/,SV:/^(?:(?:\+?503)|(?:0))(?:\d{8})$/,SZ:/^(?:\+?268)?\d{7,8}$/,TH:/^(?:(?:\+66)|0)\d{9}$/,TT:/^(?:(?:\+?1-868)|\(?868\)?)(\d{7})$/,TZ:/^(?:(?:\+?255)|0)?[67]\d{8}$/,US:/^(\+\d{1,2}\s?)?([2-9]{1}\d{2}[2-9]{1}\d{6})$/,CA:/^(\+\d{1,2}\s?)?([2-9]{1}\d{2}[2-9]{1}\d{6})$/,UY:/^(?:(?:\+598|0)\s?(9\d{3}|2\d{2}|[4-9]\d{6}))$/,UZ:/^(?:\+?998)?\s?[3456789]\d{8}$/,YE:/^(?:\+?967)?(?:\d{7,8})$/,ZA:/^(?:(?:\+27)|0)(\d{9})$/,KW:/^(?:\+?965)[569]\d{7}$/,BH:/^(?:\+?973)?[356]\d{7}$/,TL:/^(?:(?:\+670)\s?)?[0-9]{3}\s?[0-9]{3,4}$/,VC:/^(?:(?:\+1)?784)?(?:\d{3})?\d{7}$/,VE:/^(?:(?:\+58)|0)?4\d{9}$/,VN:/^(?:(?:\+84)|0)?[1-9]\d{8}$/,ZM:/^(?:(?:\+260)|0)?[123456789]\d{8,9}$/,ZW:/^(?:(?:\+263)|0)?(?:\d{9,10})$/,LT:/^(?:(?:\+370)|8)\d{8}$/,LU:/^(?:(?:\+352)?(6|2(6|7|8|9))\d{6})$/,LV:/^(?:(?:\+371)?2\d{7})$/,ME:/^(?:(?:\+382)?[67]\d{7,20})$/,MG:/^(?:(?:\+261)?3[234568]\d{7})$/,MZ:/^(?:(?:\+258)|(?:258))?8[234567]\d{7,8}$/,NL:/^(?:(?:\+31)|0(6(?:\d{8})|[1-9](?:(?:\d{8})|(?:\s\d{3}\s\d{4}))|(?:\d{8})))$/,PA:/^(?:(?:\+507)\s?)?[46]\d{6,7}$/,PL:/^(?:(?:\+48)?(?:\s?\d{3}\s?\d{3}\s?\d{3}|(?:\d{2}\s?){4}\d{2}|\d{3}-\d{3}-\d{3}))$/,PR:/^(?:(?:\+1)?787|939)\d{7}$/,PS:/^(?:(?:\+970))(5[2349])\d{7}$/,PT:/^(?:(?:\+351)?9(1\d|2[1-9]|6[12345789]|7[12345789])\d{7})$/,PY:/^(?:(?:\+595|0)9[9876]\d{7})$/,RO:/^(?:(?:\+40|0))(?:7[2-8]\d{7}|21\d{8})$/,RS:/^(?:(?:\+381)|0)([0-6]|[7][012345])[0-9]{5,10}$/,RW:/^(?:(?:\+250)|(0))\d{9}$/,SI:/^(?:(?:\+386)|0)?[1-59]\d{7,8}$/,SK:/^(?:(?:\+421))?(0|9[0-8])\d{8}$/,SM:/^(?:(?:\+378)|(0549|6\d{4}))\d{5}$/,SN:/^(?:(?:\+221)|0)?[3679]\d{7}$/,SR:/^(?:(?:\+597))\d{7}$/,TG:/^(?:(?:\+228))\d{8}$/,TJ:/^(?:(?:\+992))(37|55|77)\d{7}$/,TN:/^(?:(?:\+216)|22|9[1-9])\d{7}$/,TR:/^(?:(?:\+90)|(0))\s?5\d{9}$/,TW:/^(?:(?:\+886)|0)?9\d{8}$/,UA:/^(?:(?:\+380)|(0))?(39|50|63|66|67|68|91|92|93|94|95|96|97|98|99)\d{7}$/,UG:/^(?:(?:\+256)|0)?[39]\d{8}$/},S={1:["US","AG","AI","AS","BB","BM","BS","CA","DM","DO","GD","GU","JM","KN","KY","LC","MP","MS","PR","SX","TC","TT","VC","VG","VI"],7:["RU","KZ"],20:["EG"],27:["ZA"],30:["GR"],31:["NL"],32:["BE"],33:["FR"],34:["ES"],36:["HU"],39:["IT","VA"],40:["RO"],41:["CH"],43:["AT"],44:["GB","GG","IM","JE"],45:["DK"],46:["SE"],47:["NO","SJ"],48:["PL"],49:["DE"],51:["PE"],52:["MX"],53:["CU"],54:["AR"],55:["BR"],56:["CL"],57:["CO"],58:["VE"],60:["MY"],61:["AU","CC","CX"],62:["ID"],63:["PH"],64:["NZ"],65:["SG"],66:["TH"],81:["JP"],82:["KR"],84:["VN"],86:["CN"],90:["TR"],91:["IN"],92:["PK"],93:["AF"],94:["LK"],95:["MM"],98:["IR"],211:["SS"],212:["MA","EH"],213:["DZ"],216:["TN"],218:["LY"],220:["GM"],221:["SN"],222:["MR"],223:["ML"],224:["GN"],225:["CI"],226:["BF"],227:["NE"],228:["TG"],229:["BJ"],230:["MU"],231:["LR"],232:["SL"],233:["GH"],234:["NG"],235:["TD"],236:["CF"],237:["CM"],238:["CV"],239:["ST"],240:["GQ"],241:["GA"],242:["CG"],243:["CD"],244:["AO"],245:["GW"],246:["IO"],247:["AC"],248:["SC"],249:["SD"],250:["RW"],251:["ET"],252:["SO"],253:["DJ"],254:["KE"],255:["TZ"],256:["UG"],257:["BI"],258:["MZ"],260:["ZM"],261:["MG"],262:["RE","YT"],263:["ZW"],264:["NA"],265:["MW"],266:["LS"],267:["BW"],268:["SZ"],269:["KM"],290:["SH","TA"],291:["ER"],297:["AW"],298:["FO"],299:["GL"],350:["GI"],351:["PT"],352:["LU"],353:["IE"],354:["IS"],355:["AL"],356:["MT"],357:["CY"],358:["FI","AX"],359:["BG"],370:["LT"],371:["LV"],372:["EE"],373:["MD"],374:["AM"],375:["BY"],376:["AD"],377:["MC"],378:["SM"],380:["UA"],381:["RS"],382:["ME"],383:["XK"],385:["HR"],386:["SI"],387:["BA"],389:["MK"],420:["CZ"],421:["SK"],423:["LI"],500:["FK"],501:["BZ"],502:["GT"],503:["SV"],504:["HN"],505:["NI"],506:["CR"],507:["PA"],508:["PM"],509:["HT"],590:["GP","BL","MF"],591:["BO"],592:["GY"],593:["EC"],594:["GF"],595:["PY"],596:["MQ"],597:["SR"],598:["UY"],599:["CW","BQ"],670:["TL"],672:["NF"],673:["BN"],674:["NR"],675:["PG"],676:["TO"],677:["SB"],678:["VU"],679:["FJ"],680:["PW"],681:["WF"],682:["CK"],683:["NU"],685:["WS"],686:["KI"],687:["NC"],688:["TV"],689:["PF"],690:["TK"],691:["FM"],692:["MH"],800:["001"],808:["001"],850:["KP"],852:["HK"],853:["MO"],855:["KH"],856:["LA"],870:["001"],878:["001"],880:["BD"],881:["001"],882:["001"],883:["001"],886:["TW"],888:["001"],960:["MV"],961:["LB"],962:["JO"],963:["SY"],964:["IQ"],965:["KW"],966:["SA"],967:["YE"],968:["OM"],970:["PS"],971:["AE"],972:["IL"],973:["BH"],974:["QA"],975:["BT"],976:["MN"],977:["NP"],979:["001"],992:["TJ"],993:["TM"],994:["AZ"],995:["GE"],996:["KG"],998:["UZ"]},D=x=>{if("+"===x.toString().charAt(0)){const e=x.toString().replace(/\D/g,""),n=[];for(const x in S)e.startsWith(x)&&n.push(...S[x]);return n.find((e=>{const n=b[e];if(n&&n.test(x.toString()))return e}))||""}for(const e in b){if(b[e].test(x.toString()))return e}return""},g=x=>{const e=x.replace(/[^0-9+]|(?!A)\+/g,"");return"+"===x[0]?`+${e}`:e};var w=n(((x,e)=>{const n=g(x.toString());if(e=e&&e in b?e:D(n),!x)return!1;if(e in b){return b[e].test(n)}return!1}));const h={IN:"xxxx xxxxxx",MY:"xx xxxxx xx",AE:"xx xxx xxxx",AL:"xxx xx xxxx",AM:"xx xx xx xx",AR:"xxxx-xxxx",AU:"xxx xxx xxx",AW:"xxx-xxxx",BB:"xxx-xxxx",BD:"xxxx-xxxxxx",BM:"xxx-xxxx",BN:"xxxx-xxxx",BO:"xxxx-xxxx",BS:"xxx-xxxx",BW:"xx xxxx xxxx",BZ:"xxx-xxxx",CA:"xxx-xxx-xxxx",CH:"xxx xxx xxx",CN:"xxxx-xxxxxxx",CO:"xxxx-xxxxxxx",CR:"xxxx-xxxx",CU:"xxxx-xxxx",CZ:"xxx xxx xxx",DK:"xx xx xx xx",DO:"xxx-xxxxxxx",DZ:"xxxx-xxxx-xxx",EG:"xx xxx xxxx",ET:"xx xxx xxxx",EU:"xxx xx xx xx",FJ:"xxxx xxxx",GB:"xxxx xxx xxx",GH:"xxx xxx xxxx",GI:"xxxx xxxx",GM:"xxxx-xxxx",GT:"xxxx-xxxx",GY:"xxx-xxxx",HK:"xxxx xxxx",HN:"xxxx-xxxx",HR:"xxx xxx xxxx",HT:"xxx-xxxx",HU:"xxx xxx xxxx",ID:"xxxx-xxxx-xxxx",IL:"xxxx-xxx-xxx",JM:"xxx-xxxx",KE:"xxx xxxxxx",KG:"xxx-xx-xx-xx",KH:"xxx-xxx-xxx",KY:"xxx-xxxx",KZ:"xxx-xxx-xx-xx",LA:"xxx xx xxxx",LK:"xx xxx xxxx",LR:"xxx-xxx-xxxx",LS:"xxx xx xxxx",LT:"xxx xxxxx",LU:"xxx xx xxx",LV:"xxxx xxxx",MA:"xxxx-xxxxxx",MD:"xx xxxxxx",ME:"xx xxxxxx",MG:"xx xx xx xx xx",MK:"xx xx xx xx",MM:"xx xxxxxx",MN:"xxx-xx-xxxx",MO:"xxxx xxxx",MU:"xx xxxx xxxx",MV:"xxxxxx",MW:"xx xxxx xxxx",MX:"xxx-xxx-xxxx",MZ:"xx xxxxxxx",NA:"xx xxxx xxxx",NG:"xxx xxx xxxx",NI:"xxxx-xxxx",NL:"xxx-xxxxxxx",NO:"xxxx xxxx",NP:"xxxx-xxxxxxx",NZ:"xxx-xxxxxxx",OM:"xxxx-xxxx",PA:"xxx-xxxx",PE:"xxx-xxx-xxx",PG:"xxx-xxxxxx",PH:"xxx-xxxx",PK:"xxx-xxxxxxx",PL:"xxx xxx xxx",PR:"xxx-xxx-xxxx",PS:"xxxx-xxxxxxx",PT:"xxx xxx xxx",PY:"xxx-xxxxxx",QA:"xxxx xxxx",RO:"xxx xxx xxxx",RS:"xxx xxxxx",RU:"xxx xxx-xx-xx",RW:"xxx xxxxxx",SA:"xxx-xxxxxxx",SC:"xx xxxxx",SE:"xxx-xxx xx xx",SG:"xxxx xxxx",SI:"xx xxxxxx",SK:"xxx xxx xxx",SL:"xxx-xxxxxx",SM:"xxxxx xxxxx",SN:"xx xxx xx xx",SO:"xxx xxxxxxx",SR:"xxx-xxxx",SS:"xxx xxxx xxx",SV:"xxxx-xxxx",SZ:"xxx xx xxxx",TG:"xx xx xx xx",TH:"xxx-xxxxxxx",TJ:"xxx xx xx xx",TL:"xxx-xxxxxxx",TN:"xx xxxxxx",TR:"xxx xxx xx xx",TT:"xxx-xxxx",TW:"xxxx-xxxxxx",TZ:"xxx xxx xxxx",UA:"xx xxx xx xx",UG:"xxx xxxxxxx",US:"xxx-xxx-xxxx",UY:"xxx-xxxxx",UZ:"xxx-xxx-xx-xx",VC:"xxx-xxxx",VE:"xxxx-xxx-xxxx",VN:"xxxx-xxxxxxx",YE:"xxxx-xxxx",ZA:"xxx-xxx-xxxx",ZM:"xxx-xxxxxxx",ZW:"xx xxx xxxx",KW:"xxx xx xxxx",BH:"xxxx xxxx"};var I=n(((x,e)=>{if(!x)throw new Error("Parameter `phoneNumber` is invalid!");x=x.toString(),x=g(x),e=e&&e in h?e:D(x);const n=h[e];if(!n)return x;let a=0;for(let x=0;x<n.length;x++)"x"===n[x]&&a++;const t=x.length-a,r=x.slice(t),o=[];let d=0;for(let x=0;x<n.length;x++){const e=n[x];"x"===e?d<r.length&&(o.push(r[d]),d++):o.push(e)}const s=o.join("");return(x.slice(0,t)+" "+s).trim()}));var M=n(((x,e)=>{if(!x)throw new Error("Parameter `phoneNumber` is invalid!");x=x.toString(),x=g(x);const n=e&&e in h?e:D(x),a=I(x,n),t=h[n];if(!t)return{countryCode:n||"",dialCode:"",formattedPhoneNumber:x,formatTemplate:""};let r=0;for(let x=0;x<t.length;x++)"x"===t[x]&&r++;const o=x.length-r;return{countryCode:n,formattedPhoneNumber:a,dialCode:x.slice(0,o),formatTemplate:h[n]}}));const f=x=>{const e=[{regex:/^(\d{4})\/(\d{2})\/(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3},{regex:/^(\d{2})\/(\d{2})\/(\d{4})$/,yearIndex:3,monthIndex:2,dayIndex:1},{regex:/^(\d{4})\.(\d{2})\.(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3},{regex:/^(\d{2})-(\d{2})-(\d{4})$/,yearIndex:1,monthIndex:2,dayIndex:3},{regex:/^(\d{2})\/(\d{2})\/(\d{4})$/,yearIndex:1,monthIndex:2,dayIndex:3},{regex:/^(\d{4})-(\d{2})-(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3},{regex:/^(\d{4})\.\s*(\d{2})\.\s*(\d{2})\.\s*$/,yearIndex:1,monthIndex:2,dayIndex:3},{regex:/^(\d{2})\.(\d{2})\.(\d{4})$/,yearIndex:1,monthIndex:2,dayIndex:3},{regex:/^(\d{4})\/(\d{2})\/(\d{2}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,hourIndex:4,minuteIndex:5,secondIndex:6},{regex:/^(\d{2})\/(\d{2})\/(\d{4}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:3,monthIndex:2,dayIndex:1,hourIndex:4,minuteIndex:5,secondIndex:6},{regex:/^(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,hourIndex:4,minuteIndex:5,secondIndex:6},{regex:/^(\d{2})-(\d{2})-(\d{4}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:3,monthIndex:2,dayIndex:1,hourIndex:4,minuteIndex:5,secondIndex:6},{regex:/^(\d{4})\.(\d{2})\.(\d{2}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,hourIndex:4,minuteIndex:5,secondIndex:6},{regex:/^(\d{2})\.(\d{2})\.(\d{4}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:3,monthIndex:2,dayIndex:1,hourIndex:4,minuteIndex:5,secondIndex:6}];for(const n of e){const e=x.match(n.regex);if(e){const x=e[n.yearIndex],a=e[n.monthIndex],t=e[n.dayIndex],r=n.hourIndex?e[n.hourIndex]:"00",o=n.minuteIndex?e[n.minuteIndex]:"00",d=n.secondIndex?e[n.secondIndex]:"00";return new Date(`${x}-${a}-${t}T${r}:${o}:${d}`)}}throw new Error("Date format not recognized")};var N=n(((x,e,n)=>{switch(x="string"==typeof x?new Date(f(x)):new Date(x),n){case"days":x.setDate(x.getDate()+e);break;case"months":x.setMonth(x.getMonth()+e);break;case"years":x.setFullYear(x.getFullYear()+e)}return x}));var E=n(((x,e,n={})=>{e||(e=t.getState().locale||s());const a=(x="string"==typeof x?new Date(f(x)):new Date(x))instanceof Date?x:new Date(x);let r;try{r=new Intl.DateTimeFormat(e,n)}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}return r.format(a)}));var T=n(((x,e,n={})=>{e||(e=t.getState().locale||s());const a=Object.assign(Object.assign({},n),{timeStyle:void 0});let r;try{r=E(x,e,a)}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}return r}));var A=n(((x,e,n={})=>{e||(e=t.getState().locale||s());const a=Object.assign(Object.assign({},n),{dateStyle:void 0});let r;try{r=E(x,e,a)}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}return r}));var P=n(((x,e={})=>{let n;x||(x=t.getState().locale||s()),e.weekday||(e.weekday="long");try{const a=new Intl.DateTimeFormat(x,e),t=new Date(2e3,0,2);n=a.format(t)}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}const a=Array.from({length:7},((n,a)=>new Intl.DateTimeFormat(x,e).format(new Date(2e3,0,2+a)))),r=a.indexOf(n);if(-1===r)throw new Error("Unable to determine the first day of the week");return a[(r+1)%7]}));var R=n((x=>(x="string"==typeof x?new Date(f(x)):new Date(x),Math.ceil((x.getMonth()+1)/3))));var K=n(((x,e=new Date,n,a)=>{x="string"==typeof x?new Date(f(x)):new Date(x),e="string"==typeof e?new Date(f(e)):new Date(e),n||(n=t.getState().locale||s());const r=(x.getTime()-e.getTime())/1e3,o=3600,d=86400,i=7*d,m=30*d,l=365*d;let c,y,u;Math.abs(r)<60?(c=r,y="second"):Math.abs(r)<o?(c=r/60,y="minute"):Math.abs(r)<d?(c=r/o,y="hour"):Math.abs(r)<i?(c=r/d,y="day"):Math.abs(r)<m?(c=r/i,y="week"):Math.abs(r)<l?(c=r/m,y="month"):(c=r/l,y="year");try{u=new Intl.RelativeTimeFormat(n,a).format(Math.round(c),y)}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}return u}));var G=n((x=>{x="string"==typeof x?new Date(f(x)):new Date(x);const e=new Date(x.getFullYear(),0,1),n=(x.getTime()-e.getTime())/864e5;return Math.ceil((n+e.getDay()+1)/7)}));var L=n(((x,e={})=>{try{x||(x=t.getState().locale||s()),e.weekday||(e.weekday="long");const n=new Intl.DateTimeFormat(x,e);return Array.from({length:7},((x,e)=>n.format(new Date(1970,0,4+e))))}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}}));var B=n(((x,e)=>{x="string"==typeof x?new Date(f(x)):new Date(x),e="string"==typeof e?new Date(f(e)):new Date(e);return(x instanceof Date?x:new Date(x))>(e instanceof Date?e:new Date(e))}));var C=n(((x,e)=>{x="string"==typeof x?new Date(f(x)):new Date(x),e="string"==typeof e?new Date(f(e)):new Date(e);return(x instanceof Date?x:new Date(x))<(e instanceof Date?e:new Date(e))}));var p=n((x=>x%4==0&&x%100!=0||x%400==0));var v=n(((x,e)=>(x="string"==typeof x?new Date(f(x)):new Date(x),e="string"==typeof e?new Date(f(e)):new Date(e),x.getDate()===e.getDate()&&x.getMonth()===e.getMonth()&&x.getFullYear()===e.getFullYear())));var O=n((x=>{try{x="string"==typeof x?new Date(f(x)):new Date(x)}catch(x){throw x instanceof Error?new Error(x.message):new Error(`An unknown error occurred = ${x}`)}return x instanceof Date&&!isNaN(x.getTime())}));const H=["day","dayPeriod","era","fractionalSecond","hour","minute","month","relatedYear","second","timeZone","weekday","year","yearName"];var U=n(((x,e={},n)=>{const a="string"==typeof x?new Date(f(x)):new Date(x);n=n||t.getState().locale||s();try{const x=new Intl.DateTimeFormat(n,e).formatToParts(a),t={};let r=0,o=1,d=1,s=0,i=0,m=0;x.forEach((x=>{H.includes(x.type)&&(t[x.type]=(t[x.type]||"")+x.value);const e=parseInt(x.value,10);switch(x.type){case"year":r=e;break;case"month":o=e;break;case"day":d=e;break;case"hour":s=e;break;case"minute":i=e;break;case"second":m=e}}));const l=new Date(r,o-1,d,s,i,m);if(isNaN(l.getTime()))throw new Error("Invalid date");return Object.assign(Object.assign({},t),{rawParts:x,formattedDate:x.map((x=>x.value)).join(""),dateObj:l})}catch(x){throw x instanceof Error?x:new Error(`An unknown error occurred: ${x}`)}}));var Z=n(((x,e,n)=>(x="string"==typeof x?new Date(f(x)):new Date(x),N(x,-e,n))));x.add=N,x.formatDate=T,x.formatDateTime=E,x.formatNumber=m,x.formatNumberByParts=$,x.formatPhoneNumber=I,x.formatTime=A,x.getCurrencyList=c,x.getCurrencySymbol=y,x.getFirstDayOfWeek=P,x.getQuarter=R,x.getRelativeTime=K,x.getState=r,x.getWeek=G,x.getWeekdays=L,x.isAfter=B,x.isBefore=C,x.isLeapYear=p,x.isSameDay=v,x.isValidDate=O,x.isValidPhoneNumber=w,x.parseDateTime=U,x.parsePhoneNumber=M,x.resetState=d,x.setState=o,x.subtract=Z}));
//# sourceMappingURL=index.min.js.map
