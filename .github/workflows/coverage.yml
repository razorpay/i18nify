name: Coverage
on:
  pull_request:
    types:
      - closed
  push:
    branches:
      - master

env:
  HOME: /actions-runner/_work
  GITHUB_ACCESS_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  REPORT_PORTAL_TOKEN: ${{ secrets.REPORT_PORTAL_TOKEN }}
  REPORT_PORTAL_HOST: ${{ secrets.REPORT_PORTAL_HOST }}
  REPORT_PORTAL_PROJECT: ${{ secrets.REPORT_PORTAL_PROJECT }}
  COMMIT_ID: ${{ github.sha }}
  NODE_VERSION: 20.3.1

# to cancel prev workflow if it is running
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  sonar:
    name: Sonar Scanner
    runs-on: [self-hosted]
    continue-on-error: true
    if: ${{ github.ref == 'refs/heads/master' && github.event.head_commit.author.name != 'rzpcibot'}}
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}

      - name: Get Pull Request Number
        id: pr
        run: |
          commit_sha=${{ github.sha }}
          repo_name=${{ github.repository }}
          pr_number=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$repo_name/pulls?head=$commit_sha" | \
            jq -r '.[0].number')
          echo "::set-output name=pr_number::$pr_number"

      - name: Set PR Number
        run: |
          echo "PULL_REQUEST_NUMBER=${{ steps.pr.outputs.pr_number }}" >> $GITHUB_ENV

      - name: Setup Node v20
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.1

      - name: Install Yarn
        run: npm install -g yarn

      - name: Setup Cache & Install Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile

      - name: Run Tests
        run: yarn test

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
        with:
          args: >
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.projectVersion=${{ github.sha }}
